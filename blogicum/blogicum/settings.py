"""
Django settings for blogicum project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent 
# указывает на внешнюю папку blogicum/
# корень проекта (где manage.py)

TEMPLATES_DIR = BASE_DIR / "templates"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used incd production secret!
SECRET_KEY = "django-insecure-=zo!%09+_t6#00jsvo7pdz$0sy)g%=0xc+m!&)47l^9yx%kwad"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = []

# Django показывает кастомные 404/500/403 только при DEBUG=False. 
# На время проверки:
# DEBUG = False
# ALLOWED_HOSTS = ["127.0.0.1", "localhost", "testserver"] # Не уверен что это нужно


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # наши приложения
    "pages.apps.PagesConfig",
    "blog.apps.BlogConfig",
    "django_bootstrap5",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "blogicum.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # это указывает Django искать шаблоны сначала в <project_root>/templates/
        # "DIRS": [BASE_DIR / "templates"], # Это убираем так как введи новый вид
        "DIRS": [TEMPLATES_DIR],
        # это указывает Django искать шаблоны в папках приложений
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "blogicum.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Обычно тоже используют BASE_DIR:
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# Включил русскую локализацию
LANGUAGE_CODE = "ru-RU"
# Задаёт язык по умолчанию для всего проекта.
# Если есть переводы (gettext/.po-файлы), Django будет брать именно русские строки (ru), а не английские.
# В шаблонах и админке по умолчанию текстовые метки (verbose_name, надписи из django.contrib.*, стандартные формы) будут на русском.
USE_I18N = True
# Включает систему Internationalization, т.е. возможность перевода строк.
# Если True, Django активирует механизмы gettext_lazy, загрузку .mo-файлов из папки locale/ и разбирает конструкции {% trans %} в шаблонах.
# Если False, весь переводный код игнорируется, и на сайте останутся «сырье» (обычно английские) строк

# # USE_L10N в Django 5 уже не используется (локализация форматов всегда включена). 
# # Удали строку USE_L10N = True.
# USE_L10N = True
# # Включает Localization — форматирование данных под локаль.
# # Даты, числа и валюты будут автоматически выводиться в том виде, как это принято в выбранной локали (например, 31.12.2025 вместо 2025-12-31, разделитель дробной части запятой и т.д.).
# # При False используется единый формат (согласно внутренним настройкам Django), независимо от языка.

TIME_ZONE = "UTC"

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

STATICFILES_DIRS = [BASE_DIR / "static"]

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Кастомный обработчик CSRF-ошибки
CSRF_FAILURE_VIEW = "pages.views.csrf_failure"

# Куда редиректить после логина/логаута
LOGIN_URL = "login"
LOGIN_REDIRECT_URL = "blog:index" # подставь своё имя урла главной
LOGOUT_REDIRECT_URL = "blog:index"

# Псевдо-отправка писем в файлы (для тестов и разработки)
EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
EMAIL_FILE_PATH = BASE_DIR / "sent_emails"

# (необязательно, но удобно)
DEFAULT_FROM_EMAIL = "no_reply@blogicum.local"
